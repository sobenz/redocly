openapi: 3.0.0
info:
  version: 1.0.154.9
  title: Plexure Authorization Service
  description: Provides means for consumers api and SDK to get authorization.
  contact:
    name: Plexure Support
    url: https://support.plexure.com
    email: support@plexure.com
paths:
  /Authentication/ConsumerAuthentication:
    get:
      tags:
        - Consumer Authentication
      summary: Returns the authentication record of the consumer.
      operationId: GetConsumerAuthenticationAsync
      parameters:
        - name: consumerId
          in: query
          description: Unique Id of the Consumer
          required: false
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/ConsumerAuthentication"
            application/json:
              schema:
                $ref: "#/components/schemas/ConsumerAuthentication"
            text/json:
              schema:
                $ref: "#/components/schemas/ConsumerAuthentication"
        "400":
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
        "401":
          description: Unauthorized
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
        "403":
          description: Forbidden
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
  /Authentication/ValidateOtp:
    post:
      tags:
        - Consumer Authentication
      description: Validates the OTP token for a consumer. For more indepth documentation
        read the guide on [OTP Validation](/docs/howtos/otp-validation)
      summary: Validates Otp of Consumer.
      operationId: ValidateOtpAsync
      parameters:
        - name: otp
          in: query
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                type: boolean
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
        "400":
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
        "401":
          description: Unauthorized
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
        "403":
          description: Forbidden
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
  /Authorization/ServiceTokens:
    get:
      tags:
        - Consumer Authorization
      summary: Creates a Service Tokens
      operationId: GetServiceTokensAsync
      parameters:
        - name: tenantId
          in: query
          description: Id of tenant
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/JwtTokenPair"
            application/json:
              schema:
                $ref: "#/components/schemas/JwtTokenPair"
            text/json:
              schema:
                $ref: "#/components/schemas/JwtTokenPair"
        "400":
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
        "401":
          description: Unauthorized
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
        "403":
          description: Forbidden
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
  /Authorization/ConsumerTokens:
    post:
      tags:
        - Consumer Authorization
      summary: Creates both the Refresh Token and Access Token of type Consumer
      operationId: CreateConsumerTokensAsync
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/ConsumerTokenParameter"
          application/json:
            schema:
              $ref: "#/components/schemas/ConsumerTokenParameter"
          text/json:
            schema:
              $ref: "#/components/schemas/ConsumerTokenParameter"
          application/*+json:
            schema:
              $ref: "#/components/schemas/ConsumerTokenParameter"
        description: ConsumerTokenParameter representing the required parameters
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/JwtTokenPair"
            application/json:
              schema:
                $ref: "#/components/schemas/JwtTokenPair"
            text/json:
              schema:
                $ref: "#/components/schemas/JwtTokenPair"
        "400":
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
        "401":
          description: Unauthorized
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
        "403":
          description: Forbidden
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
  /Authorization/ConsumerMfaTokens:
    post:
      tags:
        - Consumer Authorization
      summary: Creates both the Refresh Token and Access Token of type Consumer MFA
      operationId: CreateConsumerMfaTokensAsync
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/ConsumerMfaTokenParameter"
          application/json:
            schema:
              $ref: "#/components/schemas/ConsumerMfaTokenParameter"
          text/json:
            schema:
              $ref: "#/components/schemas/ConsumerMfaTokenParameter"
          application/*+json:
            schema:
              $ref: "#/components/schemas/ConsumerMfaTokenParameter"
        description: ConsumerMfaTokenParameter representing the required parameters
          (DeviceId, TenantId, ConsumerId)
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/JwtTokenPair"
            application/json:
              schema:
                $ref: "#/components/schemas/JwtTokenPair"
            text/json:
              schema:
                $ref: "#/components/schemas/JwtTokenPair"
        "400":
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
        "401":
          description: Unauthorized
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
        "403":
          description: Forbidden
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
  /Authorization/DeviceTokens:
    post:
      tags:
        - Consumer Authorization
      summary: Creates both the Refresh Token and Access Token of type Device
      operationId: CreateDeviceTokensAsync
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/DeviceTokenParameter"
          application/json:
            schema:
              $ref: "#/components/schemas/DeviceTokenParameter"
          text/json:
            schema:
              $ref: "#/components/schemas/DeviceTokenParameter"
          application/*+json:
            schema:
              $ref: "#/components/schemas/DeviceTokenParameter"
        description: DeviceTokenParameter representing the required parameters
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/JwtTokenPair"
            application/json:
              schema:
                $ref: "#/components/schemas/JwtTokenPair"
            text/json:
              schema:
                $ref: "#/components/schemas/JwtTokenPair"
        "400":
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
        "401":
          description: Unauthorized
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
        "403":
          description: Forbidden
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
  /Authorization/MerchantTokens:
    post:
      tags:
        - Consumer Authorization
      summary: Creates both the Refresh Token and Access Token of type Merchant
      operationId: CreateMerchantTokensAsync
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/MerchantTokenParameter"
          application/json:
            schema:
              $ref: "#/components/schemas/MerchantTokenParameter"
          text/json:
            schema:
              $ref: "#/components/schemas/MerchantTokenParameter"
          application/*+json:
            schema:
              $ref: "#/components/schemas/MerchantTokenParameter"
        description: MerchantTokenParameter representing the required parameters
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/JwtTokenPair"
            application/json:
              schema:
                $ref: "#/components/schemas/JwtTokenPair"
            text/json:
              schema:
                $ref: "#/components/schemas/JwtTokenPair"
        "400":
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
        "401":
          description: Unauthorized
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
        "403":
          description: Forbidden
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
  /Authorization/ActivityTokens:
    get:
      tags:
        - Consumer Authorization
      summary: Creates both the Refresh Token and Access Token of type Activity
      operationId: CreateActivityTokensAsync
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/JwtTokenPair"
            application/json:
              schema:
                $ref: "#/components/schemas/JwtTokenPair"
            text/json:
              schema:
                $ref: "#/components/schemas/JwtTokenPair"
        "400":
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
        "401":
          description: Unauthorized
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
        "403":
          description: Forbidden
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
  /Authorization/ActivityTokens/external:
    post:
      tags:
        - Consumer Authorization
      summary: Creates both the Refresh Token and Access Token of type Activity
        internally
      operationId: CreateExternalActivityTokensAsync
      requestBody:
        $ref: "#/components/requestBodies/ConsumerActivityTokenParameter"
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/JwtTokenPair"
            application/json:
              schema:
                $ref: "#/components/schemas/JwtTokenPair"
            text/json:
              schema:
                $ref: "#/components/schemas/JwtTokenPair"
        "400":
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
        "401":
          description: Unauthorized
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
        "403":
          description: Forbidden
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
  /Authorization/ActivityTokens/internal:
    post:
      tags:
        - Consumer Authorization
      summary: Creates both the Refresh Token and Access Token of type Activity
        internally
      operationId: CreateInternalActivityTokensAsync
      requestBody:
        $ref: "#/components/requestBodies/ConsumerActivityTokenParameter"
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/JwtTokenPair"
            application/json:
              schema:
                $ref: "#/components/schemas/JwtTokenPair"
            text/json:
              schema:
                $ref: "#/components/schemas/JwtTokenPair"
        "400":
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
        "401":
          description: Unauthorized
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
        "403":
          description: Forbidden
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
  /Authorization/AccessToken:
    get:
      tags:
        - Consumer Authorization
      summary: Creates an Access Token from a Refresh Token.
      operationId: GetAccessTokenAsync
      parameters:
        - name: refreshToken
          in: header
          description: This is the JWT Refresh Token
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/JwtTokenPair"
            application/json:
              schema:
                $ref: "#/components/schemas/JwtTokenPair"
            text/json:
              schema:
                $ref: "#/components/schemas/JwtTokenPair"
        "400":
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
        "401":
          description: Unauthorized
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
  /Tools/ValidateAccessTokens:
    get:
      tags:
        - Tools
      summary: Validate a token
      operationId: ValidateAccessTokens
      parameters:
        - name: accessToken
          in: query
          description: ""
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                uniqueItems: false
                type: array
                items:
                  $ref: "#/components/schemas/ValueTuple_String_String_"
            application/json:
              schema:
                uniqueItems: false
                type: array
                items:
                  $ref: "#/components/schemas/ValueTuple_String_String_"
            text/json:
              schema:
                uniqueItems: false
                type: array
                items:
                  $ref: "#/components/schemas/ValueTuple_String_String_"
        "400":
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
        "401":
          description: Unauthorized
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
  /Tools/GetTenantConfig:
    get:
      tags:
        - Tools
      summary: get tenant configuration
      operationId: GetConfig
      parameters:
        - name: tenantId
          in: query
          description: ""
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/AuthorizationTenantConfiguration"
            application/json:
              schema:
                $ref: "#/components/schemas/AuthorizationTenantConfiguration"
            text/json:
              schema:
                $ref: "#/components/schemas/AuthorizationTenantConfiguration"
        "400":
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
        "401":
          description: Unauthorized
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
  /Tools/SetTenantConfig:
    post:
      tags:
        - Tools
      summary: set tenant configuration
      operationId: SetConfig
      parameters:
        - name: tenantId
          in: query
          description: ""
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/AuthorizationTenantConfiguration"
          application/json:
            schema:
              $ref: "#/components/schemas/AuthorizationTenantConfiguration"
          text/json:
            schema:
              $ref: "#/components/schemas/AuthorizationTenantConfiguration"
          application/*+json:
            schema:
              $ref: "#/components/schemas/AuthorizationTenantConfiguration"
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/AuthorizationTenantConfiguration"
            application/json:
              schema:
                $ref: "#/components/schemas/AuthorizationTenantConfiguration"
            text/json:
              schema:
                $ref: "#/components/schemas/AuthorizationTenantConfiguration"
        "400":
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
        "401":
          description: Unauthorized
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
security:
  - Bearer: []
components:
  requestBodies:
    ConsumerActivityTokenParameter:
      content:
        application/json-patch+json:
          schema:
            $ref: "#/components/schemas/ConsumerActivityTokenParameter"
        application/json:
          schema:
            $ref: "#/components/schemas/ConsumerActivityTokenParameter"
        text/json:
          schema:
            $ref: "#/components/schemas/ConsumerActivityTokenParameter"
        application/*+json:
          schema:
            $ref: "#/components/schemas/ConsumerActivityTokenParameter"
  securitySchemes:
    Bearer:
      name: Authorization
      in: header
      type: apiKey
      description: Please insert JWT with Bearer into field
  schemas:
    ConsumerAuthentication:
      type: object
      properties:
        partitionKey:
          type: string
          readOnly: true
        id:
          format: uuid
          type: string
        deactivatedDate:
          format: date-time
          type: string
        mfaDetails:
          $ref: "#/components/schemas/ConsumerAuthenticationMfaDetails"
        status:
          type: string
    ConsumerAuthenticationMfaDetails:
      type: object
      properties:
        channel:
          enum:
            - email
          type: string
        identifier:
          type: string
        unusedOTPCount:
          format: int32
          type: integer
        invalidOtpCount:
          format: int32
          type: integer
        lastInvalidDatetime:
          format: date-time
          type: string
        lastSuccessfulDateTime:
          format: date-time
          type: string
    ProblemDetails:
      type: object
      properties:
        type:
          type: string
        title:
          type: string
        status:
          format: int32
          type: integer
        detail:
          type: string
        instance:
          type: string
      additionalProperties:
        type: object
    JwtTokenPair:
      type: object
      properties:
        jwtAccessToken:
          type: string
        jwtRefreshToken:
          type: string
        token_type:
          type: string
          readOnly: true
    ConsumerTokenParameter:
      type: object
      properties:
        deviceId:
          type: string
        consumerId:
          type: string
        status:
          type: string
        impersonatedBy:
          type: string
        tenantId:
          type: string
    ConsumerMfaTokenParameter:
      type: object
      properties:
        deviceId:
          type: string
        consumerId:
          type: string
        tenantId:
          type: string
    DeviceTokenParameter:
      type: object
      properties:
        deviceId:
          type: string
        consumerId:
          type: string
        status:
          type: string
        marketId:
          format: int32
          type: integer
        tenantId:
          type: string
    MerchantTokenParameter:
      type: object
      properties:
        tenantId:
          type: string
    ConsumerActivityTokenParameter:
      type: object
      properties:
        gender:
          type: string
        dateOfBirth:
          format: date-time
          type: string
        deviceId:
          type: string
        consumerId:
          type: string
        status:
          type: string
        impersonatedBy:
          type: string
        tenantId:
          type: string
    AuthorizationTenantConfiguration:
      type: object
      properties:
        consumerTokenExpiration:
          $ref: "#/components/schemas/TokenExpiration"
        merchantTokenExpiration:
          $ref: "#/components/schemas/TokenExpiration"
        activityTokenExpiration:
          $ref: "#/components/schemas/TokenExpiration"
        serviceTokenExpiration:
          $ref: "#/components/schemas/TokenExpiration"
        deviceTokenExpiration:
          $ref: "#/components/schemas/TokenExpiration"
    TokenExpiration:
      type: object
      properties:
        accessTokenExpiration:
          format: int64
          type: integer
        refreshTokenExpiration:
          format: int64
          type: integer
    ValueTuple_String_String_:
      type: object
      properties:
        item1:
          type: string
        item2:
          type: string